import pandas as pd
import os
import numpy as np
import random
from PIL import Image, ImageDraw, ImageFont

def compare_images(input_image, output_image):
    '''
    Compare the two images are the same or not.
    '''
    if input_image.size != output_image.size:
        return False

    rows, cols = input_image.size
    for row in range(rows):
        for col in range(cols):
            input_pixel = input_image.getpixel((row, col))
            output_pixel = output_image.getpixel((row, col))
            if input_pixel != output_pixel:
                return False
    return True

def create_images():
    '''
    Create additional Chinese words images by using
    esun plain images as backgroud to add text on it
    '''
    isnull_path = './isnull/'
    isnull_files = [f for f in os.listdir(isnull_path) if os.path.isfile(os.path.join(isnull_path, f))]
    font_sizes = [24, 36, 48, 60]
    n = 300001
    with open('./word2000.txt','r') as f:
        wordset = f.read().split('\n')
    for i, word in enumerate(wordset):
        can_use_num = 0
        img_dir = './add_images_2000/'
        if not os.path.isdir(img_dir + word):
            os.mkdir(img_dir + word)
        for j in range(1, 31):
            idx = str(j)

            target_img = isnull_path + random.choice(isnull_files)
            origin_img = Image.open(target_img)
            img_width, img_height = origin_img.size
            if img_width <= 30:
                target_font_size = random.randint(30, 36)
                bias_w = random.randint(-1, 1)
                bias_h = random.randint(-1, 1)
            elif img_width <= 40:
                target_font_size = random.randint(30, 42)
                bias_w = random.randint(-2, 2)
                bias_h = random.randint(-2, 2)
            else:
                target_font_size = random.randint(36, 60)
                bias_w = random.randint(-5, 5)
                bias_h = random.randint(-5, 5)

            myfont = ImageFont.truetype('./font/font' + idx + '.ttf', target_font_size)
            img = Image.open(target_img)
            d = ImageDraw.Draw(img)
            w, h = d.textsize(word, font=myfont)
            d.text(((img_width-w)/2+bias_w, (img_height-h)/2+bias_h), word, font=myfont, fill=(0, 0, 0))

            '''
            When the word cannot be generated by the font file,
            the image will be the same as esun plain images
            '''
            issame = compare_images(img, origin_img)
            if not issame:
                can_use_num += 1
                img.save(img_dir + word + '/' + str(n) + '_' + word +'.jpg')
                n += 1
        with open('word_canuse_num.txt', 'a') as f:
            f.write(word + '\t' + str(can_use_num) + '\n')
        print(i, flush=True)